plugins {
    id 'java'
    id("io.qameta.allure") version "2.11.2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

allure {
    report {
        version.set("2.17.3") //версия Allure Report (https://github.com/allure-framework/allure2)
    }
    adapter {
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 {
                adapterVersion.set("2.17.3") //версия Allure JUnit5 (https://github.com/allure-framework/allure-java)
            }
        }
    }
}


dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.8.1',
            'com.codeborne:selenide:6.13.1',
            'io.rest-assured:rest-assured:5.3.1',
            'com.fasterxml.jackson.core:jackson-databind:2.15.1',
            'org.aeonbits.owner:owner:1.0.12',
            'com.github.javafaker:javafaker:1.0.2',
            'io.qameta.allure:allure-selenide:2.17.3',
            "org.slf4j:slf4j-simple:2.0.7"
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}

task cart_test(type: Test) {
    useJUnitPlatform{
        includeTags("cartTest")   //включает тесты по названию тэга, которые надо запустить
    }
}

task auth_negative_test(type: Test) {
    useJUnitPlatform{
        includeTags("authNegative")   //включает тесты по названию тэга, которые надо запустить
    }
}

task auth_positive_test(type: Test) {
    useJUnitPlatform{
        includeTags("authPositive")   //включает тесты по названию тэга, которые надо запустить
    }
}

task auth_cart_test(type: Test) {
    useJUnitPlatform{
        includeTags("authCart")   //включает тесты по названию тэга, которые надо запустить
    }
}

task kukush(type: Test) {
    useJUnitPlatform{
        includeTags("kuku")   //включает тесты по названию тэга, которые надо запустить
    }
}